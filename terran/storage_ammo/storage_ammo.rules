Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/AephiexStorageAmmo"
	ID = aephiex.storage_ammo
	IconNameKey = "Parts/AephiexStorageAmmoIcon"
	DescriptionKey = "Parts/AephiexStorageAmmoDesc"
	EditorGroup = "Storage"
	SelectionTypeID = &ID
	TypeCategories = [ storage, storageblend, uses_ammo, chaingun_ammo_supplier ]

	Resources
	[
		[steel, 18]
	]

	Size = [1, 1]
	MaxHealth = 3000
	ExplosiveDamageAbsorption = 50%
	ExplosiveDamageResistance = 50%
	Flammable = false
	InitialPenetrationResistance = 4
	ContinuingPenetrationResistance = 4
	Density = 1.5
	IsRotateable = true

	IsExternal = true
	IsWalled = false
	IsSelfDestructible = false
	GeneratorRequiresDoor = true

	ReceivableBuffs : ^/0/ReceivableBuffs []
	IgnoreRotationForMirroredSelection = false

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}

	Components : ^/0/Components
	{
		AmmoStorage
		{
			Type = TypedResourceGrid
			ResourceType = bullet
			GridRect = [0, 0, 1, 1]
			Layer = "doodads_low"
			SpriteInset = 8/64
		}

		ResourceConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = bullet
			Storage = AmmoStorage
			DefaultPriority = &/PRIORITIES/Storage_Supply
		}

        // Forward Proxies
		NextChainProxy
		{
			Type = ResourceStorageProxy
			ResourceType = bullet
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = uses_ammo
			}
			ComponentID = AmmoStorage
		}
        NextChainProxy_Combined
        {
            Type = ResourceStorageProxy
            ResourceType = bullet
            PartLocation = [0, -1]
            PartCriteria
            {
                Category = uses_ammo
            }
            ComponentID = CombinedAmmoStorage
        }

        // Forward Converters
        ResourceConverter
        {
            Type = ResourceConverter
            FromStorage = AmmoStorage
            ToStorage = NextChainProxy
            FromQuantity = 5
            ToQuantity = 5
            Interval = 0.025
        }
        ResourceConverter_Combined
        {
            Type = ResourceConverter
            FromStorage = AmmoStorage
            ToStorage = NextChainProxy_Combined
            FromQuantity = 5
            ToQuantity = 5
            Interval = 0.025
        }

		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// Pull directly from ammo factories behind and to the sides

		// Proxies to detect ammo factories in adjacent positions
		FactoryProxy_Left
		{
			Type = ResourceStorageProxy
			ResourceType = bullet
			PartLocation = [-1, 0] // Checks left
			PartCriteria
			{
				Category = provides_ammo
			}
			ComponentID = AmmoStorage
		}

		FactoryProxy_Right
		{
			Type = ResourceStorageProxy
			ResourceType = bullet
			PartLocation = [1, 0] // Checks right
			PartCriteria
			{
				Category = provides_ammo
			}
			ComponentID = AmmoStorage
		}

		FactoryProxy_Back
		{
			Type = ResourceStorageProxy
			ResourceType = bullet
			PartLocation = [0, 1] // Checks behind
			PartCriteria
			{
				Category = provides_ammo
			}
			ComponentID = AmmoStorage
		}

		// Pull ammo from nearby factories
		ResourceConverter_Factory_Left
		{
			Type = ResourceConverter
			FromStorage = FactoryProxy_Left
			ToStorage = AmmoStorage
			FromQuantity = 5
			ToQuantity = 5
			Interval = 0.025
		}

		ResourceConverter_Factory_Right
		{
			Type = ResourceConverter
			FromStorage = FactoryProxy_Right
			ToStorage = AmmoStorage
			FromQuantity = 5
			ToQuantity = 5
			Interval = 0.025
		}

		ResourceConverter_Factory_Back
		{
			Type = ResourceConverter
			FromStorage = FactoryProxy_Back
			ToStorage = AmmoStorage
			FromQuantity = 5
			ToQuantity = 5
			Interval = 0.025
		}

		// Now the whole thing again but for dpmbullet resource types 
		// Uncomment below for Extended Tech Tree Mod support

//		dpmAmmoStorage
//		{
//			Type = TypedResourceGrid
//			ResourceType = dpmbullet
//			GridRect = [0, 0, 1, 1]
//			Layer = "doodads_low"
//			SpriteInset = 8/64
//		}
//
//		ResourceConsumer_DPM
//		{
//			Type = TypedResourceGridConsumer
//			ResourceType = dpmbullet
//			Storage = dpmAmmoStorage
//			DefaultPriority = &/PRIORITIES/Storage_Supply
//		}
//
//		// Forward Proxies
//		NextChainProxy_DPM
//		{
//			Type = ResourceStorageProxy
//			ResourceType = dpmbullet
//			PartLocation = [0, -1]
//			PartCriteria
//			{
//				Category = uses_ammo
//			}
//			ComponentID = dpmAmmoStorage
//		}
//		NextChainProxy_Combined_DPM
//		{
//			Type = ResourceStorageProxy
//			ResourceType = dpmbullet
//			PartLocation = [0, -1]
//			PartCriteria
//			{
//				Category = uses_ammo
//			}
//			ComponentID = CombinedAmmoStorage
//		}
//
//		// Forward Converters
//		ResourceConverter_DPM
//		{
//			Type = ResourceConverter
//			FromStorage = dpmAmmoStorage
//			ToStorage = NextChainProxy_DPM
//			FromQuantity = 5
//			ToQuantity = 5
//			Interval = 0.025
//		}
//		ResourceConverter_Combined_DPM
//		{
//			Type = ResourceConverter
//			FromStorage = dpmAmmoStorage
//			ToStorage = NextChainProxy_Combined_DPM
//			FromQuantity = 5
//			ToQuantity = 5
//			Interval = 0.025
//		}
//

		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			Floor
            {
				//Used for the shared conveyour belt images
                Layer = "floors"
                DamageLevels
                [
                    {
                        AnimationFiles
                        [
                            "../floors/floor1.png"
                            "../floors/floor2.png"
                            "../floors/floor3.png"
                            "../floors/floor4.png"
                            "../floors/floor5.png"
                            "../floors/floor6.png"
                            "../floors/floor7.png"
                            "../floors/floor8.png"
                        ]
                        Size = [1, 1]
                        AnimationInterval = .0333
                        AnimationStartTime = Zero
                    }
                ]
			}

			OperationalDoodad
			{
				//used for the icon overlay
				//this layer (-600) is between floor (-700) and storage doodads_low (-500)
                Layer = "turrets"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
            }

			Roof = &<./Data/ships/terran/corridor/corridor.rules>/Part/Components/Graphics/Roof
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [0.5, 0.5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}

		WallsBlend : <../walls/walls.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [ storageblend ]
		}

		BlueprintWalls : <../walls/blueprintwalls.rules>
		{
			Location = [.5, .5]
			BlendsWithCategories = [ storageblend ]
		}
	}
}